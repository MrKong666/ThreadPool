在win下vs编译器中，条件变量析构会释放资源，linux中则不会。造成了无故死锁。
项目名称：基于C++11/14/17实现的线程池
平台工具：win vs2022，Ubuntu vscode 
项目描述：
本项目是基于C++11/14/17实现的线程池，可用于高并发网络服务器、master-slave线程模型、耗时任务处理等。使用模版编程，支持任意类型数据返回。
主要工作：
1.支持fixed和cached模式的线程池定制
2.基于条件变量condition_variable和互斥锁实现任务提交线程和任务执行线程间通信机制
3.使用map和queue容器管理线程对象和任务
4.使用继承和多态，实现Result类，支持任意返回值，实现Task基类，继承重写run函数即可使用。
项目优化：
使用C++自带的库函数简化代码，用thread packaged_task(），function函数包装器，可变参模版编程等代替Task类，简化提交，让线程池提交更加方便。future代替result，代码更简洁，有更强的健壮性。

项目问题：
1.在Threadpool资源回收，等待线程池所有线程退出时，发生死锁问题，导致进程无法退出。
2.在win平台vs工具下运行良好的线程池，在linux平台gnu编译器运行下会发生异常死锁问题，平台运行结果有差异化。

